/* eslint-disable react/prop-types */
import React, { useState, useEffect } from 'react';
import { Page, Navbar, List, ListInput, Button, Link } from 'konsta/react';
import KoteusAstrolog from '../components/KoteusAstrolog';
import StarField from '../components/StarField';

export default function NatalFormPage({ f7router }) {
  const [formData, setFormData] = useState({ name: '', date: '', time: '', city: '' });
  const [error, setError] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [currentMessage, setCurrentMessage] = useState('');

  const successMessages = [
    '–û—Ç–ª–∏—á–Ω–æ! –ó–≤—ë–∑–¥—ã —É–∂–µ –Ω–∞—á–∏–Ω–∞—é—Ç –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è!',
    '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã! –ì–æ—Ç–æ–≤–ª—é –∫–∞—Ä—Ç—É...',
    '–ó–∞–ø—É—Å–∫–∞—é –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è!',
    '–í—Å–µ–ª–µ–Ω–Ω–∞—è –≥–æ—Ç–æ–≤–∞ —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–≤–æ–∏ —Ç–∞–π–Ω—ã!'
  ];

  useEffect(() => {
    // Clear error when user starts typing
    if (error && (formData.name || formData.date || formData.time || formData.city)) {
      setError('');
    }
  }, [formData, error]);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const validateForm = () => {
    if (!formData.name.trim()) {
      setError('–ö–∞–∫ –º–Ω–µ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? –í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è! üåô');
      return false;
    }
    if (!formData.date) {
      setError('–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω—É–∂–Ω–∞ –¥–ª—è —Ç–æ—á–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤!');
      return false;
    }
    if (!formData.time) {
      setError('–í—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É!');
      return false;
    }
    if (!formData.city.trim()) {
      setError('–ì–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è –≤–∞–∂–µ–Ω –¥–ª—è –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç!');
      return false;
    }
    return true;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    setIsSubmitting(true);
    setError('');
    
    // Show success message
    const randomMessage = successMessages[Math.floor(Math.random() * successMessages.length)];
    setCurrentMessage(randomMessage);
    
    // Simulate cosmic calculation delay
    setTimeout(() => {
      f7router.navigate('/natal-result/', { 
        props: { 
          data: formData,
          timestamp: Date.now() // For unique chart generation
        } 
      });
      setIsSubmitting(false);
    }, 2000);
  };

  return (
    <Page className="cosmic-bg min-h-screen relative overflow-hidden">
      <StarField />
      
      <Navbar 
        title="–ù–∞—Ç–∞–ª—å–Ω–∞—è –ö–∞—Ä—Ç–∞" 
        left={<Link navbar href="/">–ù–∞–∑–∞–¥</Link>}
        className="glassy border-b border-white/10"
      />
      
      <div className="p-6 relative z-10">
        {/* Koteus Astrolog */}
        <KoteusAstrolog 
          error={error} 
          message={currentMessage}
          isAnimating={!error && !currentMessage}
        />

        {/* Form Container */}
        <div className="glassy-enhanced p-6 max-w-md mx-auto">
          <form onSubmit={handleSubmit} className="space-y-6">
            
            {/* Name Input */}
            <div className="neon-input">
              <label className="block text-sm font-medium mb-2 text-cyan-300">
                –¢–≤–æ—ë –∫–æ—Å–º–∏—á–µ—Å–∫–æ–µ –∏–º—è
              </label>
              <input
                type="text"
                name="name"
                placeholder="–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç –≤ —ç—Ç–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π?"
                value={formData.name}
                onChange={handleChange}
                className="w-full"
                disabled={isSubmitting}
              />
            </div>

            {/* Date Input */}
            <div className="neon-input">
              <label className="block text-sm font-medium mb-2 text-cyan-300">
                –î–∞—Ç–∞ —Ç–≤–æ–µ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–∞ –ó–µ–º–ª–µ
              </label>
              <input
                type="date"
                name="date"
                value={formData.date}
                onChange={handleChange}
                className="w-full"
                disabled={isSubmitting}
              />
            </div>

            {/* Time Input */}
            <div className="neon-input">
              <label className="block text-sm font-medium mb-2 text-cyan-300">
                –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è
              </label>
              <input
                type="time"
                name="time"
                value={formData.time}
                onChange={handleChange}
                className="w-full"
                disabled={isSubmitting}
              />
            </div>

            {/* City Input */}
            <div className="neon-input">
              <label className="block text-sm font-medium mb-2 text-cyan-300">
                –ì–æ—Ä–æ–¥ —Ç–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è
              </label>
              <input
                type="text"
                name="city"
                placeholder="–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã –ø–æ—è–≤–∏–ª—Å—è –Ω–∞ —Å–≤–µ—Ç?"
                value={formData.city}
                onChange={handleChange}
                className="w-full"
                disabled={isSubmitting}
              />
            </div>

            {/* Submit Button */}
            <button 
              type="submit" 
              className={`neon-btn w-full mt-8 ${isSubmitting ? 'opacity-75 cursor-not-allowed' : ''}`}
              disabled={isSubmitting}
            >
              {isSubmitting ? (
                <span className="flex items-center justify-center">
                  <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
                  –°–æ–∑–¥–∞—é —Ç–≤–æ—é –∫–∞—Ä—Ç—É –∑–≤—ë–∑–¥...
                </span>
              ) : (
                '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –ù–∞—Ç–∞–ª—å–Ω—É—é –ö–∞—Ä—Ç—É'
              )}
            </button>
          </form>

          {/* Premium Features Hint */}
          <div className="mt-6 p-4 rounded-xl bg-gradient-to-r from-purple-500/10 to-pink-500/10 border border-purple-400/20">
            <div className="text-center text-purple-300 text-sm">
              –ü—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏: –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑, —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å, –ø—Ä–æ–≥–Ω–æ–∑—ã
              <br />
              <span className="text-xs text-purple-400">–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π –ø–æ–ª–Ω—É—é —Å–∏–ª—É –∑–≤—ë–∑–¥!</span>
            </div>
          </div>
        </div>

        {/* Cosmic Decorations */}
        <div className="absolute top-20 left-10 w-6 h-6 rounded-full bg-cyan-400 opacity-60 animate-ping"></div>
        <div className="absolute top-40 right-16 w-4 h-4 rounded-full bg-purple-400 opacity-40 animate-pulse"></div>
        <div className="absolute bottom-20 left-20 w-8 h-8 rounded-full bg-pink-400 opacity-30 animate-bounce"></div>
      </div>
    </Page>
  );
}
